/* SequenceStim.frag.txt */

const float twopi = 2.0*3.141592653589793;

/* Values passed from vertex shader: */
varying vec4 White;
varying vec4 Grey;
varying vec4 Black;
varying float CenterX;
varying float CenterY;
varying float Radius;
varying float spatFreq;
varying float orientation;
varying float phase;
varying float screenDist;
varying float CenterX2;
varying float CenterY2;
varying float Contrast;

void main()
{
    /* Query current output texel position: */
    vec2 pos = gl_TexCoord[0].xy;

    /* Convert distance, apply shift offset: */
    float x = pos[0]-CenterX;
    float y = pos[1]-CenterY;

    float xp = y*sin(orientation)+x*cos(orientation);  
    float yp = y*cos(orientation)-x*sin(orientation);
    float mix_coeff = cos(twopi*spatFreq*(twopi/4-acos(yp/sqrt(screenDist*screenDist+xp*xp+yp*yp)))+phase);

   /* float theta = twopi/4-acos(y/sqrt(screenDist*screenDist+x*x+y*y)); */
   /* float phi = atan(x/screenDist);  */
    
   /* float kernel = exp(-((theta-CenterX2)*(theta-CenterX2)+(phi-CenterY2)*(phi-CenterY2))/(Radius*Radius/2.0)); */ 
    /* float kernel = exp(-acos(sin(CenterX2)*sin(theta)+cos(CenterX2)*cos(theta)*cos(CenterY2-phi))/(Radius/2)); */
    mix_coeff = Contrast*0.5*mix_coeff+0.5;
    gl_FragColor = vec4(mix_coeff,mix_coeff,mix_coeff,1);
}